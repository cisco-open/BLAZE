"use strict";(self.webpackChunkblaze=self.webpackChunkblaze||[]).push([[217],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>k});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(t),m=o,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return t?a.createElement(k,r(r({ref:n},c),{},{components:t})):a.createElement(k,r({ref:n},c))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,r=new Array(l);r[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[u]="string"==typeof e?e:o,r[1]=i;for(var s=2;s<l;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9803:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=t(7462),o=(t(7294),t(3905));const l={sidebar_position:3},r="Installation",i={unversionedId:"installation",id:"installation",title:"Installation",description:"BLAZE is currently supported on Linux, Windows, and Mac. Specific instrucutions shown below:",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/docs/installation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/installation.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Usage - As Easy as 1, 2, 3",permalink:"/docs/Features/usage"}},p={},s=[{value:"<strong>1. Environment Setup (Python, Pip)</strong>",id:"1-environment-setup-python-pip",level:3},{value:"Option 1 - Pyenv: Local Development",id:"option-1---pyenv-local-development",level:4},{value:"Option 2 - Install using conda: Local development",id:"option-2---install-using-conda-local-development",level:4},{value:"<strong>2. (Build) Drag-and-Drop YAML Builder</strong>",id:"2-build-drag-and-drop-yaml-builder",level:3},{value:"<strong>3. (Execute) Running a Pipeline</strong>",id:"3-execute-running-a-pipeline",level:3},{value:"<strong>4. (Interact) Checking POSTMAN/Swagger</strong>",id:"4-interact-checking-postmanswagger",level:3},{value:"<strong>5. (Interact) Launching WebApps</strong>",id:"5-interact-launching-webapps",level:3},{value:"Option 1 - React WebApp",id:"option-1---react-webapp",level:4},{value:"Option 2 - Dash Dashboard",id:"option-2---dash-dashboard",level:4},{value:"<strong>6. (Interact) WebEx Integrations</strong>",id:"6-interact-webex-integrations",level:3},{value:"<strong>7. (Interact) Conversational AI</strong>",id:"7-interact-conversational-ai",level:3}],c={toc:s},u="wrapper";function d(e){let{components:n,...l}=e;return(0,o.kt)(u,(0,a.Z)({},c,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"installation"},"Installation"),(0,o.kt)("p",null,"BLAZE is currently supported on ",(0,o.kt)("strong",{parentName:"p"},"Linux"),", ",(0,o.kt)("strong",{parentName:"p"},"Windows"),", and ",(0,o.kt)("strong",{parentName:"p"},"Mac"),". Specific instrucutions shown below: "),(0,o.kt)("h3",{id:"1-environment-setup-python-pip"},(0,o.kt)("strong",{parentName:"h3"},"1. Environment Setup (Python, Pip)")),(0,o.kt)("p",null,"At the very start, please clone this repostiory using "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git clone https://github.com/cisco-open/Blaze.git\n")),(0,o.kt)("p",null,"Next, we must install the necessary packages for BLAZE. For this, we have two options: "),(0,o.kt)("h4",{id:"option-1---pyenv-local-development"},"Option 1 - Pyenv: Local Development"),(0,o.kt)("p",null,"Install Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"For Ubuntu/Debian")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"For Fedora/CentOS")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo yum install gcc zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel xz xz-devel libffi-devel\n")),(0,o.kt)("p",null,"Install Pyenv"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"curl https://pyenv.run | bash\n")),(0,o.kt)("p",null,"Install Python version 3.9.16"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pyenv install -v 3.9.16\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"You can check the installed Python version by using command ",(0,o.kt)("inlineCode",{parentName:"p"},"pyenv versions"))),(0,o.kt)("p",null,"Create virtual environment with specific version using below command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pyenv virtualenv 3.9.16 venv\n")),(0,o.kt)("p",null,"Activate virtual environment using "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pyenv local venv\n")),(0,o.kt)("p",null,"or by running the following"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pyenv activate <environment_name>\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"You can verify this by running ",(0,o.kt)("inlineCode",{parentName:"p"},"pyenv which python"))),(0,o.kt)("p",null,"Finally, install packages and modules using "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pip install -r requirements.txt\n")),(0,o.kt)("h4",{id:"option-2---install-using-conda-local-development"},"Option 2 - Install using conda: Local development"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"NOTE: The use of Conda may require the use of Anaconda Commercial Edition to comply with Anaconda's Terms of Service if your use is considered commercial according to Anaconda. More information about Anaconda's Terms of Service and what qualifies as commercial usage can be found here: ",(0,o.kt)("a",{parentName:"p",href:"https://www.anaconda.com/blog/anaconda-commercial-edition-faq/"},"https://www.anaconda.com/blog/anaconda-commercial-edition-faq/")," ")),(0,o.kt)("p",null,"Once you have cloned the BLAZE repository, cd into it"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd Blaze \n")),(0,o.kt)("p",null,"Create your conda environment with"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"conda env create -f blaze_env.yml\n")),(0,o.kt)("p",null,"Then, activate your conda environment with"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"conda activate blaze\n")),(0,o.kt)("h3",{id:"2-build-drag-and-drop-yaml-builder"},(0,o.kt)("strong",{parentName:"h3"},"2. (Build) Drag-and-Drop YAML Builder")),(0,o.kt)("p",null,"Run the Drag-and-Drop YAML Builder with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"python build.py\n")),(0,o.kt)("p",null,"Now, a link should appear (ex. ",(0,o.kt)("inlineCode",{parentName:"p"},"Dash is running on http://127.0.0.1:5000/"),"). Follow this link in your browser to open the builder!"),(0,o.kt)("p",null,"Make sure to check-out the instructions found in ",(0,o.kt)("a",{parentName:"p",href:"drag/README.md"},"BLAZE Drag-and-Drop - README")," for using the YAML Builder. "),(0,o.kt)("p",null,"Additionally, depending on the model chosen, make sure to check out model-specific instructions found in ",(0,o.kt)("a",{parentName:"p",href:"backend/models/README.md"},"BLAZE Models - README"),"! "),(0,o.kt)("h3",{id:"3-execute-running-a-pipeline"},(0,o.kt)("strong",{parentName:"h3"},"3. (Execute) Running a Pipeline")),(0,o.kt)("p",null,"Once you have your YAML file (either generated or pre-existing), note its relative path. "),(0,o.kt)("p",null,"Run the following command to launch the pipeline specified in the YAML file: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"python run.py <path-to-your-yaml-file> \n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"For example, one could run ",(0,o.kt)("inlineCode",{parentName:"p"},"python run.py yaml/01_search_custom.yaml")," ")),(0,o.kt)("p",null,"Now, a link should appear (ex. ",(0,o.kt)("inlineCode",{parentName:"p"},"Dash is running on http://127.0.0.1:5000/"),"). Follow this this link in your browser to open the dashboard!"),(0,o.kt)("h3",{id:"4-interact-checking-postmanswagger"},(0,o.kt)("strong",{parentName:"h3"},"4. (Interact) Checking POSTMAN/Swagger")),(0,o.kt)("p",null,"To verify that the server hosting the pipeline is running correctly, one can do so using POSTMAN."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://app.getpostman.com/run-collection/24743348-8a57bb34-f110-427b-92a5-0f92ad9097b7?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D24743348-8a57bb34-f110-427b-92a5-0f92ad9097b7%26entityType%3Dcollection%26workspaceId%3D06c9b848-815d-4d34-92cf-5bc9f5e3fbb1"},(0,o.kt)("img",{parentName:"a",src:"https://run.pstmn.io/button.svg",alt:"Run in Postman"}))),(0,o.kt)("p",null,"Additionally, one can use Swagger by simply appending ",(0,o.kt)("inlineCode",{parentName:"p"},"/apidocs/")," upon launching the backend. For example, if the backend server is running on ",(0,o.kt)("inlineCode",{parentName:"p"},"https://localhost:3000"),", then we can simply navigate to ",(0,o.kt)("inlineCode",{parentName:"p"},"https://localhost:3000/apidocs/")," in any browser to view the REST server via Swagger. "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"SwaggerExample",src:t(1988).Z,width:"1588",height:"878"})),(0,o.kt)("h3",{id:"5-interact-launching-webapps"},(0,o.kt)("strong",{parentName:"h3"},"5. (Interact) Launching WebApps")),(0,o.kt)("h4",{id:"option-1---react-webapp"},"Option 1 - React WebApp"),(0,o.kt)("p",null,"To interact with one's pipeline using our React WebApp, we need to first install Node. "),(0,o.kt)("p",null,"To install node in Windows/Mac/Linux, we can do so with: "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Visit the ",(0,o.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"NodeJS Homepage")," and install nodejs and npm"),(0,o.kt)("li",{parentName:"ul"},"We can check installation with ",(0,o.kt)("inlineCode",{parentName:"li"},"node -v")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"npm -v"))),(0,o.kt)("p",null,"Next, we will move into the client directory by using"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd client\n")),(0,o.kt)("p",null,"Then, we install ",(0,o.kt)("inlineCode",{parentName:"p"},"node_modules")," by using command "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npm install\n")),(0,o.kt)("p",null,"Finally, we can run the frontend with "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npm start\n")),(0,o.kt)("h4",{id:"option-2---dash-dashboard"},"Option 2 - Dash Dashboard"),(0,o.kt)("p",null,"To run the frontend built with Python's dash, we can simply run "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"python run_fr.py <path-to-yaml-file>\n")),(0,o.kt)("h3",{id:"6-interact-webex-integrations"},(0,o.kt)("strong",{parentName:"h3"},"6. (Interact) WebEx Integrations")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Coming soon!")),(0,o.kt)("h3",{id:"7-interact-conversational-ai"},(0,o.kt)("strong",{parentName:"h3"},"7. (Interact) Conversational AI")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Coming Soon! Detailed instructions are currently being written, and will later be found at: ",(0,o.kt)("a",{parentName:"p",href:"conv/README.md"},"BLAZE Conversational AI - README"))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Please raise an issue or reach out to our mailing list (",(0,o.kt)("a",{parentName:"p",href:"blaze-github-owners@cisco.com"},"blaze-github-owners@cisco.com"),") with any questions!")))}d.isMDXComponent=!0},1988:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/swagger_apidocs-1d0f37a53ee90b47d5f59e715dbd4ad2.png"}}]);