============
Installation
============


**************************************
Install using Pyenv: Local Development
**************************************

Install Dependencies
For Ubuntu/Debian

    .. code-block:: bash
        :linenos:

        sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl

    For Fedora/CentOS

    .. code-block:: bash
        :linenos:

        sudo yum install gcc zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel xz xz-devel libffi-devel

Install Pyenv

    .. code-block:: bash
        :linenos:

        curl https://pyenv.run | bash

Install Python version 3.9.16 using below command

    .. code-block:: bash
        :linenos:

        pyenv install -v 3.9.16

check python version installed in pyenv using command

    .. code-block:: bash
        :linenos:

        pyenv versions

Create virtual environment with specific version using below command

    .. code-block:: bash
        :linenos:

        pyenv virtualenv 3.9.16 venv

Activate virtual environment using

.. code-block:: bash
    :linenos:

    pyenv local venv or pyenv activate <environment_name>

You can verify this by running the following:

.. code-block:: bash
    :linenos:

    pyenv which python

Install packages and modules using

.. code-block:: bash
    :linenos:

    pip install -r requirements.txt

Run the Program with:

.. code-block:: bash
    :linenos:

    python build.py

Now, a link should appear (ex. Dash is running on http://127.0.0.1:5000/). Run this link in your browser to open the dashboard!

.. code-block:: bash
    :linenos:

    python run.py yaml/<file-name>.yaml


***************************
Using the Conversational AI
***************************

Build the conversational model with

.. code-block:: bash
    :linenos:

    python -m conv build

(This step may take about 15 minutes without a GPU)

And run the AI in the command line with

.. code-block:: bash
    :linenos:

    python -m conv converse

To run the webex bot server, start an ngrok tunnel with

.. code-block:: bash
    :linenos:

    ngrok http 8080 --region=eu

It is important that the region is *not* 'us'.

Set the environment variables BOT_ACCESS_TOKEN (received when you register your bot) and WEBHOOK_URL (generated by ngrok) and change to the conv directory. Then run

.. code-block:: bash
    :linenos:
    
    python webex_bot_server.py

***Sources for training data***
- greet: food_ordering/greet/train.txt
- exit: food_ordering/exit/train.txt
- ask_question: manual data entry + mindmeld data augmentation
- get_summary: manual data entry + mindmeld data augmentation
- upload_data: manual data entry + mindmeld data augmentation

*********************************
Supported Models, Knowledge Bases
*********************************

**Installing Elasticsearch**

Navigate to [Elasticsearch Installation](https://www.elastic.co/downloads/past-releases/elasticsearch-7-0-0) and 
follow the instructions according to your specific setup. 

> NOTE: ASKI does **not currently support** Elasticsearch 8 or higher! 

In order to launch elasticsearch, open a new terminal, navigate to the elasticsearch directory, and run either of the following: 

place the elastic folder as same hirerachy as ASKI project folder to start elastic service when running run.py file insted of running it manually using the commands below

- ./bin/elasticsearch (Linux/Mac)
- .\bin\elasticsearch.bat (Windows)

Now, leave this terminal window open! 


**Installing ColBERT**

Clone the following [GitHub Repo (new-api branch)](https://github.com/stanford-futuredata/ColBERT/tree/new_api) into the ColBERT folder. 

> NOTE: There might be some issues with environments, these will be resolved by next commit! 

Once downloading the ColBERT files, make sure to uncomment the three lines near the top 
of the file ColBERTSearch.py. More instructions are detailed at the top of this file. 

After this, navigate to the get_sidebar() function in app_elements.py and make sure to 
toggle the "Disabled" option next to ColBERT. You should be good to go now! 

***Installing Knowledge Graph***

Stay tuned, support for this is coming soon! 
